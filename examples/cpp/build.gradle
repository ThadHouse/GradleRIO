plugins {
    id "cpp"
    id "edu.wpi.first.GradleRIO" version "2020.0.0-alpha-1"
}

toolchainsPlugin.withRaspbian()
toolchainsPlugin.withBionic()
nativeUtils.wpi.addWarningsAsErrors()

// Define my targets (RoboRIO) and artifacts (deployable files)
// This is added by GradleRIO's backing project EmbeddedTools.
deploy {
  targets {
    target('coprocessor') {
      directory = '/home/pi'
      locations {
        // Change this if you've changed the target hostname, username or password. Or if you
        // want to use a raspberry pi, etc.
        ssh {
          address = '192.168.2.127' // Tinkerboard = linaro-alip
          user = 'pi'         // Tinkerboard = linaro
          password = 'raspberry'     // Tinkerboard = linaro
        }
      }
    }
  }
    artifacts {
        nativeArtifact('vision') {
        // Change this to change to a raspberry pi or other coprocessor. Logic from here on in
        // should be generic for any debian linux platform.
        targetPlatform = wpi.platforms.raspbian

        targets << 'coprocessor'
        component = 'canDemo'
        buildType = 'release'

        // Make sure we can run our program!
        postdeploy << { execute('chmod +x canDemo') }
        }
    }
}

model {
    components {
        canDemo(NativeExecutableSpec) {
            targetPlatform wpi.platforms.raspbian

            sources.cpp {
                source {
                    srcDir 'src/main/cpp'
                }
                exportedHeaders {
                    srcDir 'src/main/include'
                }
            }

            binaries.all {
                lib library: 'piCan', linkage: 'static'
            }

            // Defining my dependencies. In this case, WPILib (+ friends), and vendor libraries.
            wpi.useLibrary(it, "wpilib_static")
        }

        piCan(NativeLibrarySpec) {
            targetPlatform wpi.platforms.raspbian

            sources.cpp {
                source {
                    srcDir 'src/pican/src'
                }
                exportedHeaders {
                    srcDir 'src/pican/include'
                }
            }

            // Defining my dependencies. In this case, WPILib (+ friends), and vendor libraries.
            wpi.useLibrary(it, "wpilib_static")
        }
    }
}

wrapper {
    gradleVersion = '5.4.1'
}
