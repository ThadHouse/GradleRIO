plugins {
    id "cpp"
    id "visual-studio"
    id 'google-test-test-suite'
    id "jaci.openrio.gradle.GradleRIO" version "2018.05.23"
}

def TEAM = 5333

repositories {
    maven {
        url "${System.getProperty('user.home')}/releases/maven/development"
    }
    mavenCentral()
}

// Define my targets (RoboRIO) and artifacts (deployable files)
// This is added by GradleRIO's backing project EmbeddedTools.
deploy {
    targets {
        target("roborio", jaci.openrio.gradle.frc.RoboRIO) {
            team = TEAM
        }
    }
    artifacts {
        artifact('frcNative', jaci.openrio.gradle.frc.FRCNativeArtifact) {
            targets << "roborio"
            component = 'frcUserProgram'
        }
    }
}

// Defining my C++ project. In this case, it is called 'frcUserProgram',
// and is of the language C++.
model {
    components {
        frcUserProgram(NativeExecutableSpec) {
            // Target the RoboRIO (arm-frc-linux-gnueabihf)
            targetPlatform 'roborio'
            targetPlatform 'desktop'

            useLibrary(it, 'wpilib')

            sources.cpp {
                // This is where our source files are located (src/cpp for C++ files, src/include for headers)
                source {
                    srcDirs = ['src/cpp']
                    include '**/*.cpp'
                }
                exportedHeaders{
                    srcDirs = ['src/cpp', 'src/include']
                    include '**/*.hpp', '**/*.h'
                }
            }
        }

    }
    testSuites {
        frcUserProgramTest(GoogleTestTestSuiteSpec) {

            testing $.components.frcUserProgram

            binaries.all {
                println it.toolChain.name
                if (it.toolChain.name == 'roborioGcc') {
                    println 'skippingBuild'
                    buildable = false
                }
                useLibrary(it, 'wpilib', 'gtest')
                cppCompiler.define "RUNNING_GTEST"
            }

            sources.cpp {
                source {
                    srcDir 'src/test'
                    include '**/*.cpp'
                }
            }
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.7'
}
